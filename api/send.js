const express = require('express');
const axios = require('axios');
const cors = require('cors');
require('dotenv').config();

const app = express();

// Middleware
app.use(cors({
  origin: 'https://balconyrepair.vercel.app',
  methods: ['POST']
}));
app.use(express.json());

// –û–±—Ä–∞–±–æ—Ç–∫–∞ POST-–∑–∞–ø—Ä–æ—Å–∞
app.post('/send', async (req, res) => {
  const { name, phone, formType } = req.body;

  // –í–∞–ª–∏–¥–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö
  if (!name || !phone) {
    return res.status(400).json({ error: '–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –∏–º—è –∏ —Ç–µ–ª–µ—Ñ–æ–Ω' });
  }

  try {
    // –û—Ç–ø—Ä–∞–≤–∫–∞ –≤ Telegram
    await axios.post(
      `https://api.telegram.org/bot${process.env.BOT_TOKEN}/sendMessage`,
      {
        chat_id: process.env.CHAT_ID,
        text: `üìÑ –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞!\n–ò–º—è: ${name}\n–¢–µ–ª–µ—Ñ–æ–Ω: ${phone}\n–¢–∏–ø: ${formType || '–Ω–µ —É–∫–∞–∑–∞–Ω'}`
      }
    );
    
    res.status(200).json({ status: 'success' });
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ Telegram API:', error.response?.data);
    res.status(500).json({ error: '–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞' });
  }
});

module.exports = app;